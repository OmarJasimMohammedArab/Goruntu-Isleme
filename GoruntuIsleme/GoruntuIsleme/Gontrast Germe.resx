<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Upload.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOcAAAA2CAYAAAA8lo6qAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAEwpJREFUeF7tnYl3VcUdx/kvuohathRRq4IEkpAEQlgrp+wEAsgmi8pSARUQZBdK
        ETk9iigqqFSsFBEoLmwtgoIQ0gAJBAghQPb1Je9lJfz6+86dezO5b5JAmmfe8czvnO/JezO/39w7c+cz
        230c2uhsx+9/H87aykpi5bLIyMioRQWuEllbWF0leg0bOz30eZcuJxN69KC8mBgq79+faPBgIyOjAAh8
        5TJn4I25O8L8tZUo1jfOCD3WtauncsAAbUFGRkaBE7hj/grBoUTSMsyYR596ylM7cCDdHTTIyMioFQT+
        wCF4lGi2aYOlbHm/fiLTyMio9QQOwaMAkykNPxMaSnd4WjUyMmp9gUdwCTi3ZkdH0x3enBoZGbW+wCO4
        BJxJZX37Ug0nGhkZtb7AI7gEnLnVvM41MjIKHoFLwElVsbFGRkZBJHAp4KzkadTIyCh4VAdnTIyRkVEQ
        yYGzgr8Eu7wxsUK6PCOjX5ocOMv79Alq5fYdRqviU4RyYodrfYyMfkly4PT17h20yokZSq+Pv0bPTSWh
        pePTRJrO18jolyIHTm909M+mkui+VNS7f4PyRPMSVvpmxQwTMNpgqoAiTy3XyOiXpDo4o6ICruLoWNox
        YjfNm1RMz0+uaFBvjE2k0ii+QY5ZEZ/qwIi/M6dU0+IJN8XnlfGXyBPVx+86UMX8+aSab9IkrZ+3Xz/p
        YVnlm2/q/e5D7muLxtb4BYN848bJu7TMN2aM1s+tipUrZYRlvmE8UGr8jJovB84y/hJoAUx75mtMa8ad
        Z+iiRcyq+GRazoBm9hkq8gBveswYXuZeEX4lDKf7OlC5C5BXeA1/KTTU39cF54evvEL7Hn/c3+8+5L72
        uF//mjyRkVrf1pbXBedcbqPrPXtqfVW54Zz1hz/QrfBwra9R8+TAWcqdJ5AqjuxNcyZ5aMaUGkrqN0vr
        05RsOAuiYrX5qnwvvSS7jWWAM4U7np9vbKz0sMyG08/vPuS+NuAs6dVL69vaKtPAmdajh9ZXVfmKFTLC
        MsB5MyxM62vUPDlwerjzBFL5kX2dZSs+63yakg3nvcR7//xn2W0sA5zJ3bv7+/btKz0sA5xfPfaYv999
        yH1twFkcEaH1bW2VjR0r79IywHmN4dT5qvJp4MzgGVfna9Q81cGJzhNA5feKqYOTP+t8mpID5z3Ea+F8
        +ml/35gY6WGZgPPRR0Ve+apVMpWo+sQJKh0yhKr27KHarCy6W11NtdnZVPXFF+QZOLBemVo4ecmn+qDx
        fcuXU82pU1Sbl2eVx3+rDx8m76xZ9X1d8i1dSjVnz1JtcTHdramhuxUVdCcjg6r27qXSP/1JG1M2dSpV
        /+c/dNfjsfxTUsT1y+Li5F1aJuBk6cpQhVjVBJwMdeVHH8kU3r/z59JRo6jqwAGrjpWVdCc1lXyLFzvl
        eF98kWoSE8U91RYUUNXBgw3WAWpW3SdOpOqjR60Yn09cD9dFHr7bVjp8uH9sfDxVffNN3TPie6w+flw8
        Y7dvS8uBs4Q7TyCVF9HHgROfdT5NyYbzXuK98+bJJrcMcF7s1s3fl9NVA5x7GU7k+ZR91fWkJCrNyZHf
        6ltpZiblDB3qlOm+NuAs4iWfne8ZNIhqEhJkrt5ydu50/FVV7tolPfRWwR3wtnIvkG/ZMtGRdZb//ffy
        k2WA8yqvMNR4nXyvvy4jLAOcNzi24sMPZQpRyg8/ULXXK7/Vt+SXXxbte7e2VqbUWSkPfhk8aLqv2Zy6
        e199VUDltjvcHlf5HlQ4X+zala4rdRftpom1LauBZ9RScuDEyB5I5Spw4nN2r1jaPeRdenvkt7TvmbcY
        uN7aOFWrx56ntXHnqCCc97CafFVlGjgvMJx+vg3AiTyv69CjMUs/d46u8YNFnPvagLOQ4bSvWX3mjMxp
        3M69844TA5XOnClzGKpbt+hV7sDj27alxf37i++2Hdu+na7Ie/GMHClml3s1wGnHNiavBs50F5yNWVlR
        EdU20vEPbNxImTwT29drTt1LeCa928DgAKvgvFpl0AKcaXa7TZjQKJi2/XvRIuceW1oOnBjZA6mc8N4O
        nNeihtEy+YrE1rq4M5QdHqONtZUfxntXli7PrdK5c2XzWSbg5Mb38+3dW3pYBji/7NJF5LnhLM7NpQ28
        RJrUrh0tjI4WM4NqH4wfL+Lc1wacBbwfQ14ZL8tUO3fokCgLZa4cNoxuX7kic6zRfc+AAc69Vn79tcwh
        eoeXZc8/8AAlcZ3yuOzsrVtlDtElXiq/07GjiKn47DOZatk327bRC08+SdP4mW9fsoRqqqpkjmUCTl7+
        29dsSDo4MeuUu+BEG83nJdrEhx6i/W+/LVMtq+VZ82O+B9R96eDBAljbEr79lj5W+mVz6l6+Y4dMtexb
        vjfUffojj9AnfP9oX9UA5zVZ96pjx2Qqz5DXrtEKBh11QPuc2rdP5hBlX79OB3gwt++zJeXAWciVDKSy
        w6IFmDMnV9Pi8ekCyCXx1+mbgatp/sRcC9AxZygrrA9djRxGb406SgsnZNOG0T9QcvQ4UUZezwghd9k6
        eebMkc1nGeA8z43v58tgqGbDibwy16EHwJz+29/Ssccfpyx+SMlRUVReUiJzebTnme4Ed1L3tQFnPs8C
        KLP69GmZSgLEeC5v9e9+JwYOlHmOl7zVyky3d9MmSuEZ377fN9u3p7G/+pXQQe4UdrrvvfdkBM/iFy7Q
        Eu5ISK/hjmVbMu+bEbelUyfRCW8yTJeUjg1D50tVrteQynjJpxrgTOMyyz/4QKZYg8vMxx6jpQ8/TMlc
        v1weaFQ7sXs3jeP72c2woO75vG+0LfWnn2gNt4t6zfuu+6VLMpXoCq9WEAdwUfcMrnsqz7KqAc6rnFfI
        g4m62sBzn8uDwaknnqActA8/yxreP9u2MjLSuZeWVB2c6DwBVHbPKAGnPVMuiU+jGxGDRN7lyJEMaI5I
        x7L15QmZjh8099liOh89kVbHJYn8vB7hfuW75eHRVTUsg84/9ZS/r2vm3LZwIX3JnQV5KpzoaIAMYKrx
        5cePSw9rtH+fO74WTn6o8K9VYN61di3N46VZnsyz5VVm5CQewbeHhNTLR+fxzJhBvr/9jaoOHxaHFKrd
        uHiRFjz4oPBVOxlmi2UMilqWZ9o0mWuZgBODmOKjk3sFIOBkqFU4MePEMxDpgB1x3OFUe++ll2gjA2eX
        Wa7AApgWAzKZ5+h+6l5WJlOJPlu9mha5yvNMny5zLRNwYuszerRMuTcDvCn30Gb3KwfOAn4ogVRWj0gH
        ToB5PXxwvfxLveoAhdbEJVBqr6G0eeRhB1D8RRkoS43VqeS552TTWYa9yX95SeP2K3Sd1m5hsAAn8sqU
        E0ksudDR8njEVeMr9uyRHtbMhFnQM3u2TLEMcNpx6gEIrrVT0/YVX30lPYiuJiTQCgZK5PED873/PtWW
        lspcvWH2mM/QI0Y1LAf/0blzvWsVjRolcy0DnJd5EFN9dCrVwHmNO6iPl822AbA5POOocaq9OXky7ZNt
        DbljFzFkTuz/Wfet8+bR311tXTR0qMy1DHBeYZVMmiRT7s3efuEFOsorBLXslpADZz53nkAqM7SXs6y9
        Gv6M1iclYgQt4KWsgHNMAt3q0ZuyQ8No8wgLUBtOlKWLV1U0ZoxsOsvWxcVRAncgt18h7/NU2zR1Ku3n
        DoO8Ute+agaD546v/O47mUt0lvdFS3l0LnHN2oAzl5dL8K8tLJSp1sxpX0tV1Y8/Sg+ixCNH6FXupEgv
        37lTplqGPTCWhpjt927eLFOtk+UF3EERo55GYuY84LpeyaxZMtcywHmJBzHVR6fS116TEZYJOBlqFTDs
        /wCYGqfa+nHj6BAvT+08HZx2XrPqrqwa0NYYCOzyoGLXqgFwpnId3H0H+2F7Od2QDvJWSC27JeTAiZE9
        kLot4YTwWecDAdD5E6wZ1AI0imGMoE0jjzhwNhZvK9+1XD3JM9y/eXRz+5WuXy89LMOD+I47DPI8Ljgx
        +mYyZE48L7FU2L7ipRb2ScUaOHNkXNXZszKV6Nbly7STO4xTHqvgmWfE+0Dbdm/YQCt55swLC6uXjsMV
        lDv9N7+hv7ZrR0lr1sgcorTERFqI5TKXV52cLFOtmX2X61mXf/65zLUMcKYwnKqPTh4NnFe5Y3tdcGL/
        p8apBjiPKc9EjQWcGJREXnPr7tpzfsrbA/takLvugBOrBjxX9dXTPzdupJ+4fmrszyEHTozsgdSt7hEO
        nPis87GVHDHcAXTtmDN0MzSSMrv3dOBsKt5WVUqKbF7LEj/9lApGjKBc3vvk9etHnlWr6o2uPl4y4Xj+
        NO8rEe+G08v7xbMLFlBedDQVDB9OlSdPyhzLcKL3fseOVMzLHNXQkbJ5LyPKdJ0AX+SZN2/kSMrlDlHE
        e6matDSZY+1zAct23sfm86Ch2msDB9J7fC273PL9+2WOtbR7meuBdK9yWAL7/t13Ka9vX/H/4JRu2uT3
        /hPXS2Y4EduYSpYskRGWAc4rgJOXnrYJOBkwNU41AScPhHaeGmvDifRm110pD3aC98P5AwaIZ1/GA6m7
        7oATqwbEVij7/iruIyd5MMrjAR/34lV+aIEzBDw7xLS06uBERQOoW08DznIhfNb5qEoOH8ZL3CwL0NFn
        KKN7lITz3uKhYtcvdZqyL7mzTmKQMvkhId7jOpFszNARsbw5yTOBFk5ZZi53/iJeet2LffGXv4h9bvIT
        T4i4Ox6PzLEOn87xIAHQyhg4dS+bk54ulna4Xl5sLFUWF8ucpk3AievJNmxIWji5Y2vhVOJUE3DyctDO
        08KJvP+j7lWN7FHvKLMxTMAp617E+2HdDyTchuXyVH6+t3hgsuvRUnLgzOEbC6Qyu3anuc8WiR++n4qc
        Rje7hTepxIg4mjexUED5elyy+Ivvt7uFaq+hU+obb/i9z9IZ9i94rfFBhw5ObIly6IFZE+8kdYYOgfdn
        i7kzIa7o+edljmWAM4sfnl1udv/+lM6drzHD0g2w7+AZwrmfdetkrr/5lF8v4d3lPF7u2XG3p0+nSmXv
        qdoF/BRNOUEGnBcZNDu2IZUsXiwjLAOcqdyxy5SZGnDabWJLNcB5lOG089RYASdDZuc1t+6Zs2drnz/a
        A6fFqgk4lbqnLV/eaN/5Ye9e8Yw+4ZWNHdOScuDM5s4TaG0b8pkADIDas2hTgi9ibKEMXdmN6eCgQXT0
        k0/EHk/8KoRHRPwFVNiLrh09WjTyBt4v3mbI7LhiBU5PQQFN4T3OodWrxSsCdAL8MuVfPHJP5YfzIoON
        B4u4QtchC+DMVMqFLnNH3sV7Uxz4FGVni/LwFw982R//KO5na/v29WKgH3nfixNcLLXQwXAA8il3omfx
        TlD5pczmqVPppnLN01zm6X37xKkzYtEWGPXxYt2r7JsB5wVe1qvX1Kl40SIZYRngvMzSwanGqQY4j/Ce
        287TwanGNrvuvG3AbItBCFsXtDneey9ynUvM4CV2iqvuh3mrcpz3pnjWuC76De4NYOMZrX/44Xr+LSkH
        TozsgdZNnj23DdkpZlAdiI0JMYjN6NpDW3ZTOsfLzbd4RJ33wAP0LMOCl9/4+wJDtZ4f7jHuJO4YN5zT
        GE7Au5NhnMNx47mMWfx3C0OUxrCpsSgPD88W4tR8CGkHuO2XMyAzuGyUh7/r+IGf5I7i9rf1L47BvmoC
        +0/kOmAZh3u6wfeA+7Gv+XXnzvXiErkN3uCyp3AMYtEWH/PMnMH3gbrZcYBTjWtIuHc7BsLghHSsPuw0
        wOmOU2MOu9pdjQWcah7U3Lqf5vZcxe08mWOwdUGbp06ZIp+u9WslnDekyjqoOsPttpH7CMrHddFvcG97
        QkL8fFtSDpwY2X8u3XyyG93o2vO+hBhdWYFUkXIiKeDkh6LzMwpOlblev5TyKicrLEycuOfiX8soe3+s
        hjBgZzDkurJaQ3Vw4qaM6qlIOfRw4NT4GQWnilz74sbsH7ynnc0zo66c1pID522ezo3qq9AFJ07ldH5G
        QSru4LnKzysbMuwhsffeztsTbTmtJAfOW7zPMKqvQmXkteHU+RkFrzJYexcsEL9RxoEbDnVwAovniR9l
        4B864JT+Fd5/X+e9pa6M1pID503+YuSvLzt2dA4ZAKfOxyi4dYOh+yc/x2UPPigO3HCog/fHeJ5L2ral
        XR06UDr76GJbU3Vw4uaMjIyCRg6cGY8+amRkFERy4LzRpYuRkVEQyYEz/ZFHjIyMgkgOnNf5i5GRUfCo
        Ds7OnY2MjIJINpy5afzByMgoeAQuAWdiSkgIXTMyMgoKgUdwCTi3JHTqRFeNjIyCQuARXALOroeY1Cuc
        YGRk1PoCj+CyDWxnSMiR5I4d6YqRkVGrChyCRwEmjCltu79Tp8LLHTpQqpGRUasI/IFD8CjRtIwTQvd1
        6uS52L49XTYyMvpZBe6YP4AZKpGsb5zx0N9DQk5+x1PrGXY+364dXTIyMgqIwNdPzBl4w1LWb8bUGTuF
        s7aykli5LPFS1MjIqMUErhJZW1jW4U89a9Pmf6AhDGVccVrSAAAAAElFTkSuQmCC
</value>
  </data>
</root>